/*
 * This file is generated by jOOQ.
 */
package br.com.renanschmitt.medium.db.tables.records;

import br.com.renanschmitt.medium.db.tables.Persons;
import br.com.renanschmitt.medium.db.tables.pojos.PersonsPojo;
import java.time.LocalDate;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PersonsRecord extends UpdatableRecordImpl<PersonsRecord> {

  private static final long serialVersionUID = 1L;

  /** Setter for <code>jooq.persons.id</code>. */
  public void setId(Long value) {
    set(0, value);
  }

  /** Getter for <code>jooq.persons.id</code>. */
  public Long getId() {
    return (Long) get(0);
  }

  /** Setter for <code>jooq.persons.name</code>. */
  public void setName(String value) {
    set(1, value);
  }

  /** Getter for <code>jooq.persons.name</code>. */
  public String getName() {
    return (String) get(1);
  }

  /** Setter for <code>jooq.persons.birth_date</code>. */
  public void setBirthDate(LocalDate value) {
    set(2, value);
  }

  /** Getter for <code>jooq.persons.birth_date</code>. */
  public LocalDate getBirthDate() {
    return (LocalDate) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /** Create a detached PersonsRecord */
  public PersonsRecord() {
    super(Persons.PERSONS);
  }

  /** Create a detached, initialised PersonsRecord */
  public PersonsRecord(Long id, String name, LocalDate birthDate) {
    super(Persons.PERSONS);

    setId(id);
    setName(name);
    setBirthDate(birthDate);
    resetChangedOnNotNull();
  }

  /** Create a detached, initialised PersonsRecord */
  public PersonsRecord(PersonsPojo value) {
    super(Persons.PERSONS);

    if (value != null) {
      setId(value.getId());
      setName(value.getName());
      setBirthDate(value.getBirthDate());
      resetChangedOnNotNull();
    }
  }
}
